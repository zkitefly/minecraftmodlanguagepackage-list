{
  "itemGroup.cagedmobstab": "Caged Mobs",
  "item.cagedmobs.dnasampler": "DNA Sampler",
  "item.cagedmobs.dnasamplerdiamond": "Diamond DNA Sampler",
  "item.cagedmobs.dnasamplernetherite": "Netherite DNA Sampler",
  "item.cagedmobs.dnasampler.empty": "Hit entity to extract its DNA sample",
  "item.cagedmobs.dnasampler.tier1Info": "Can be used on basic entities",
  "item.cagedmobs.dnasampler.tier2Info": "Can be used on stronger entities",
  "item.cagedmobs.dnasampler.tier3Info": "Can be used on bosses",
  "item.cagedmobs.dnasampler.makeEmpty": "Shift-right click to clear stored DNA sample",
  "item.cagedmobs.dnasampler.getBackEntity": "Right click on the cage to get back stored DNA sample",
  "item.cagedmobs.dnasampler.not_cachable": "This type of entity cannot be sampled",
  "item.cagedmobs.dnasampler.not_sufficient": "This DNA sampler is not strong enough to sample this entity",
  "item.cagedmobs.dnasampler.unknown_entity": "Unknown entity",
  "item.cagedmobs.cookingupgrade": "Cooking Cage Upgrade",
  "item.cagedmobs.lightningupgrade": "Lightning Cage Upgrade",
  "item.cagedmobs.arrowupgrade": "Arrow Cage Upgrade",
  "item.cagedmobs.cookingupgrade.info": "Automatically cooks cookable entity drops",
  "item.cagedmobs.lightningupgrade.info": "Kills entities inside the cage with lightning",
  "item.cagedmobs.arrowupgrade.info": "Kills entities inside the cage with arrows",
  "item.cagedmobs.upgrades.attach": "Can be attached to Mob Cage",
  "item.cagedmobs.dragon_scale": "Dragon Scale",
  "item.cagedmobs.sponge_fragment": "Sponge Fragment",
  "item.cagedmobs.nether_star_fragment": "Nether Star Fragment",
  "item.cagedmobs.honey_drop": "Honey Drop",
  "item.cagedmobs.star_infused_netherite_ingot": "Star Infused Netherite Ingot",
  "item.cagedmobs.star_infused_netherite_nugget": "Star Infused Netherite Nugget",
  "block.cagedmobs.mobcage": "Mob Cage",
  "block.cagedmobs.hoppingmobcage": "Hopping Mob Cage",
  "block.cagedmobs.star_infused_netherite_block": "Star Infused Netherite Block",
  "block.cagedmobs.mobcage.envNotSuitable": "The environment inside the cage is not suitable for this entity.",
  "block.cagedmobs.mobcage.mainInfo": "Can replicate entities' drops from stored DNA Sample",
  "block.cagedmobs.mobcage.envInfo": "Needs to have suitable environment for entity",
  "block.cagedmobs.mobcage.hoppingInfo": "Puts produced drops into inventory below",
  "block.cagedmobs.mobcage.upgrading": "Can be upgraded",
  "block.cagedmobs.mobcage.hoppingCagesDisabled1": "Automatic harvest is disabled.",
  "block.cagedmobs.mobcage.hoppingCagesDisabled2": "Hopping Cages will work the same as non-hopping variant.",
  "block.cagedmobs.mobcage.requiresWater": "This entity requires a waterlogged cage.",
  "block.cagedmobs.mobcage.envRequired": "You need to set up an environment first.",
  "block.cagedmobs.mobcage.samplerAlreadyUsed": "This sampler has another entity's DNA inside.",
  "block.cagedmobs.mobcage.samplerNotSufficient": "This sampler is not strong enough to get back entity from the cage.",
  "block.cagedmobs.starinfusednetheriteblock.beacon": "Can be used as a beacon base block.",
  "jei.category.cagedmobs.entity": "Caged Entities Drops",
  "jei.tooltip.cagedmobs.entity.chance": "Chance: %d%%",
  "jei.tooltip.cagedmobs.entity.growModifier": "Grow Modifier: +%d%%",
  "jei.tooltip.cagedmobs.entity.amountEqual": "Amount: %d",
  "jei.tooltip.cagedmobs.entity.amount": "Amount: %d - %d",
  "jei.tooltip.cagedmobs.entity.ticks": "%d seconds",
  "jei.tooltip.cagedmobs.entity.cooking_upgrade": "Requires Cooking Upgrade",
  "jei.tooltip.cagedmobs.entity.lightning_upgrade": "Requires Lightning Upgrade",
  "jei.tooltip.cagedmobs.entity.arrow_upgrade": "Requires Arrow Upgrade",
  "jei.tooltip.cagedmobs.entity.colorItem": "Drops only from dyed entities",
  "jei.tooltip.cagedmobs.entity.requiresWater": "Requires waterlogged cage",
  "HWYLA.tooltip.cagedmobs.cage.entity": "Entity: ",
  "HWYLA.tooltip.cagedmobs.cage.environment": "Environment: ",
  "HWYLA.tooltip.cagedmobs.cage.progress": "Progress: ",
  "TOP.tooltip.cagedmobs.cage.upgrades": "Upgrades:"
}