{
  "language": "English",
  "itemGroup.tabrsgauges": "Gauges and Switches",
  "rsgauges.config.title": "Gauges and Switches Config",
  "rsgauges.tooltip.hint.extended": "§6[§9shift§r more§6]§r",
  "rsgauges.tooltip.hint.help": "§6[§9ctrl-shift§r help§6]§r",
  "block.rsgauges.arrow_target": "Arrow Target",
  "block.rsgauges.arrow_target.help": "A target that emits a redstone\n pulse to the block it is attached\n to when it is hit with an arrow\n or activated by hand.\n ${rsgauges.switch.feature.outputconfig.help}\n ${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.door_sensor_switch": "Door sensor",
  "block.rsgauges.door_sensor_switch.help": "A player detector that is mounted\n on walls above doors.§r",
  "block.rsgauges.elevator_button": "Elevator Button",
  "block.rsgauges.elevator_button.help": "Points up, down, or in both directions\ndepending on where you click the wall\nwhen placing.\n${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.glass_button": "Glass Button",
  "block.rsgauges.glass_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.colortinting.help}",
  "block.rsgauges.glass_contact_mat": "Glass Contact Plate",
  "block.rsgauges.glass_contact_mat.help": "A glass floor plate that changes\n color and emits a redstone signal\n when exposed to mechanical\n pressure on the top (e.g. someone\n standing on it), and a short time\n after the pressure was released.\n Outputs are to the front and\n bottom. Does not emit any sounds.\n Sensors are high sensitive.\n ${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.colortinting.help}",
  "block.rsgauges.glass_day_timer": "Glass Day Timer Clock",
  "block.rsgauges.glass_day_timer.help": "A small glass device that emits a\n redstone signal from a configured\n start (day) time to a configured\n end time. The time span is set\n with buttons on the device front\n face (24 hour format, where 06:00\n is sunrise). These buttons also\n allow to set output power and a\n randomizing value. Latter means\n delaying to switch on or off for\n a random time span, where higher\n values cause longer delays. Output is\n to the block where the sensor is\n placed on. Does not emit switching\n sounds.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.glass_door_contact_mat": "Configurable Glass Contact Plate",
  "block.rsgauges.glass_door_contact_mat.help": "A glass floor plate that changes\n color and emits a redstone signal\n when exposed to mechanical\n pressure on the top (e.g. someone\n standing on it), and a short time\n after the pressure was released.\n Outputs are to the front and\n bottom. Does not emit any sounds.\n ${rsgauges.switch.feature.contactmat.touch.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.colortinting.help}",
  "block.rsgauges.glass_entity_detector": "Glass Infrared Entity Detector",
  "block.rsgauges.glass_entity_detector.help": "A small glass device that\n observes a defined volume and\n emits a redstone signal if it\n sees an entity. The volume is two\n blocks above and below, and 'range'\n in front, left and right (covers\n 180 degrees). The range can be\n configured with small buttons on\n the front face, together with the\n output strength, the number of\n entities seen, and the entity type\n seen (mobs, players, animals, etc).\n Output is to the block where the\n sensor is placed on. Does not\n emit switching sounds.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.glass_interval_timer": "Glass Interval Signal Timer",
  "block.rsgauges.glass_interval_timer.help": "Emits a signal with a defined on-\n and off-time. Configured using\n buttons on the front:\n - §1Blue: On-time§r\n- §6Yellow: Off-time§r\n- §2Green: Signal ramp up/down§r\n- §4Red: Output power§r\n The timer is placed in standby\n mode for setup. Click on the front\n face to set it into run mode. Output\n is to the block where the sensor\n is placed on.\n${rsgauges.switch.feature.outputconfig.help}\n As Switch Link target the timer\n toggles between run and standby\n mode.",
  "block.rsgauges.glass_linear_entity_detector": "Glass Linear Laser Entity Detector",
  "block.rsgauges.glass_linear_entity_detector.help": "A small glass device that observes\n in one direction and emits a\n redstone signal if it senses an\n entity. The observed volume is\n 'range' blocks in front, and half\n a block to the sides. The range\n can be configured with small\n buttons on the front face, together\n with the output strength, the\n number of entities seen, and the\n entity type seen (mobs, players,\n animals, etc). Output is to the\n block where the sensor is placed\n on. Does not emit switching\n sounds. ${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.glass_rotary_switch": "Bistable Glass Switch",
  "block.rsgauges.glass_rotary_switch.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.colortinting.help}",
  "block.rsgauges.glass_small_button": "Small Glass Button",
  "block.rsgauges.glass_small_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.colortinting.help}",
  "block.rsgauges.glass_touch_button": "Glass Touch Button",
  "block.rsgauges.glass_touch_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.colortinting.help}",
  "block.rsgauges.glass_touch_switch": "Bistable Glass Touch Switch",
  "block.rsgauges.glass_touch_switch.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.colortinting.help}",
  "block.rsgauges.glass_vertical_bar_gauge": "Glass Bar Redstone Gauge",
  "block.rsgauges.glass_vertical_bar_gauge.help": "${block.rsgauges.industrial_analog_angular_gauge.help}",
  "block.rsgauges.industrial_alarm_lamp": "Alarm Lamp",
  "block.rsgauges.industrial_alarm_lamp.help": "A red lamp that blinks when\n detecting a redstone signal from\n the block it is attached to.\n Emits light when active.",
  "block.rsgauges.industrial_alarm_siren": "Alarm Siren",
  "block.rsgauges.industrial_alarm_siren.help": "A siren that frequently emits an\n alarm sound when detecting a\n redstone signal from the block\n it is attached to.",
  "block.rsgauges.industrial_analog_angular_gauge": "Analog Voltmeter Redstone Gauge",
  "block.rsgauges.industrial_analog_angular_gauge.help": "A display device that can be\n attached to a solid block to\n visualize the redstone power of\n that block. If the block can\n provide power itself, the gauge\n uses the output of it, otherwise\n the gauge will indirectly measure\n the power that the block receives\n from adjacent blocks. Strong and\n weak power is supported. Indirect\n weak measurements may have a\n short latency.",
  "block.rsgauges.industrial_analog_horizontal_gauge": "Small Analog Voltmeter Redstone Gauge",
  "block.rsgauges.industrial_analog_horizontal_gauge.help": "${block.rsgauges.industrial_analog_angular_gauge.help}",
  "block.rsgauges.industrial_block_detector": "Industrial Block Category Detector",
  "block.rsgauges.industrial_block_detector.help": "Emits a redstone signal if one or\n more blocks in front if it match a\n configured category. Configure\n with the buttons at the back side:\n - §1Range§r (observing how far)\n - §6Threshold§r (how many matches)\n - §3Debouncing§r (anti-jitter delay)\n §4- Output power§r\n - §2Filter§r (solid, fluid, wood log)\n ${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_button": "Machine Button",
  "block.rsgauges.industrial_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.projectilesense.help}",
  "block.rsgauges.industrial_comparator_switch": "Industrial Comparator Switch",
  "block.rsgauges.industrial_comparator_switch.help": "A small device that that emits a\n redstone signal depending on the\n comparator output level, inventory\n statistics, or redstone signal of\n the block it is attached to.\n The buttons on the front facing\n allow to configure the output\n signal strength, switch-on\n comparator value, switch-off\n comparator value, and operating\n mode (\"comparator, free slots,\n used slots, ...\"). In redstone-\nsignal mode, the switch does not\n output power, but can be used as\n switch link source.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_contact_mat": "Industrial Contact Mat",
  "block.rsgauges.industrial_contact_mat.help": "An industrial floor contact mat\n that emits a redstone signal when\n exposed to mechanical pressure\n on the top side (e.g. someone\n standing on it), and a short time\n after the pressure was released.\n Outputs are to the front and bottom.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_day_timer": "Industrial Day Timer Clock",
  "block.rsgauges.industrial_day_timer.help": "A small device that emits a\n redstone signal from a configured\n start (day) time to a configured\n end time. The time span is set\n with buttons on the device front\n face (24 hour format, where 06:00\n is sunrise). These buttons also\n allow to set output power and a\n randomizing value. Latter means\n delaying to switch on or off for\n a random time span, where higher\n values cause longer delays. Output\n is to the block where the sensor\n is placed on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_dimmer": "Industrial Dimmer",
  "block.rsgauges.industrial_dimmer.help": "An industrial manual redstone\n power dimmer. Allows to manually\n set an output signal between 0\n and 15 at the back side of the\n device. The vertical click position\n defines the signal strength.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_door_contact_mat": "Industrial Door Contact Mat",
  "block.rsgauges.industrial_door_contact_mat.help": "An industrial floor contact mat\n that emits a redstone signal when\n exposed to mechanical pressure on\n the top (e.g. someone standing on\n it), and a short time after the\n pressure was released. Outputs\n are to the front and bottom.\n${rsgauges.switch.feature.contactmat.touch.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_double_pole_button": "Industrial Button",
  "block.rsgauges.industrial_double_pole_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_entity_detector": "Industrial Infrared Entity Detector",
  "block.rsgauges.industrial_entity_detector.help": "A small device that observes a\n defined volume and emits a\n redstone signal if it sees an\n entity. The volume is two blocks\n above and below, and 'range' in\n front, left and right (covers\n 180 degrees). The range can be\n configured with small buttons on\n the front face, together with the\n output strength, the number of\n entities seen, and the entity\n type seen (mobs, players, animals,\n etc). Output is to the block where\n the sensor is placed on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_estop_switch": "ESTOP Button",
  "block.rsgauges.industrial_estop_switch.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n Can be shot off with a projectile.",
  "block.rsgauges.industrial_fallthrough_detector": "Industrial Fall-Through Detection Frame",
  "block.rsgauges.industrial_fallthrough_detector.help": "An industrial sensor frame that\n emits a redstone signal when\n something falls through it. Output\n is to the block it is mounted on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_fenced_button": "Fenced Machine Button",
  "block.rsgauges.industrial_fenced_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_foot_button": "Industrial Foot Button",
  "block.rsgauges.industrial_foot_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_green_blinking_led": "Green Blinking LED Redstone Indicator",
  "block.rsgauges.industrial_green_blinking_led.help": "${block.rsgauges.industrial_white_led.help}\n Blinks with a frequency of about 0.5Hz.",
  "block.rsgauges.industrial_green_led": "Green LED Redstone Indicator",
  "block.rsgauges.industrial_green_led.help": "${block.rsgauges.industrial_white_led.help}",
  "block.rsgauges.industrial_high_sensitive_trapdoor": "Industrial Sensitive Shock Activated Trapdoor",
  "block.rsgauges.industrial_high_sensitive_trapdoor.help": "An industrial floor trap door\n that swings open and emits a\n redstone signal when someone or\n something falls on it, or when\n someone walks on it without\n sneaking. Output is to the block\n it is mounted on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_hopper_switch": "Hopper Blocker",
  "block.rsgauges.industrial_hopper_switch.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.hoppermountable.help}",
  "block.rsgauges.industrial_interval_timer": "Industrial Interval Signal Timer",
  "block.rsgauges.industrial_interval_timer.help": "Emits a signal with a defined on-\n and off-time. Configured using\n buttons on the front:\n - §1Blue: On-time§r\n- §6Yellow: Off-time§r\n- §2Green: Signal ramp up/down§r\n- §4Red: Output power§r\n The timer is placed in standby\n mode for setup. Click on the front\n face to set it into run mode. Output\n is to the block where the sensor\n is placed on.\n${rsgauges.switch.feature.outputconfig.help}\n As Switch Link target the timer\n toggles between run and standby\n mode.",
  "block.rsgauges.industrial_knock_button": "Knock Detector Pulse Switch (industrial)",
  "block.rsgauges.industrial_knock_button.help": "Emits a redstone pulse when the\n adjacent block of its facing is\n clicked.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_knock_switch": "Knock Detector Bistable Switch (industrial)",
  "block.rsgauges.industrial_knock_switch.help": "Switches on/off when the adjacent\n block of its facing is clicked.§r\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_lever": "Industrial Lever",
  "block.rsgauges.industrial_lever.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_light_sensor": "Industrial Local Light Sensor",
  "block.rsgauges.industrial_light_sensor.help": "A small device that measures the\n local light level at its location\n and emits a redstone signal\n depending on on-threshold and\n off-threshold set with small\n buttons on the front face.§r These\n buttons also allow to set output\n power and debouncing. Debouncing\n delays switching off or on until\n the light level is stable, higher\n values means better noise\n filtering, but also more switching\n delay. If on and off settings are\n identical, then the measured\n light level must exactly match\n the set value. Output is to the\n block where the sensor is placed on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_lightning_sensor": "Industrial Thunderstorm Detector",
  "block.rsgauges.industrial_lightning_sensor.help": "A small wall mounted device that\n emits a redstone signal when it\n senses a high electric potential\n in the air, i.e. in thunder\n storms.§r The buttons on the front\n facing allow to configure the\n output signal strength. Output is\n to the block where the sensor\n is placed on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_linear_entity_detector": "Industrial Linear Laser Entity Detector",
  "block.rsgauges.industrial_linear_entity_detector.help": "A small device that observes in\n one direction and emits a redstone\n signal if it senses an entity.§r\nThe observed volume is 'range'\n blocks in front, and half a block\n to the sides. The range can be\n configured with small buttons on\n the front face, together with the\n output strength, the number of\n entities seen, and the entity\n type seen (mobs, players, animals,\n etc). Output is to the block where\n the sensor is placed on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_machine_switch": "Two-Button Machine Switch",
  "block.rsgauges.industrial_machine_switch.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_pull_handle": "Industrial Pull Handle Button",
  "block.rsgauges.industrial_pull_handle.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_rain_sensor": "Industrial Rain Sensor",
  "block.rsgauges.industrial_rain_sensor.help": "A small wall mounted device that\n emits a redstone signal when it\n rains on it. The buttons on the\n front facing allow to configure\n the output signal strength.\n Output is to the block where the\n sensor is placed on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_red_blinking_led": "Red LED Redstone Indicator",
  "block.rsgauges.industrial_red_blinking_led.help": "${block.rsgauges.industrial_white_led.help}\n Blinks with a frequency of about 0.5Hz.",
  "block.rsgauges.industrial_red_led": "Red LED Redstone Indicator",
  "block.rsgauges.industrial_red_led.help": "${block.rsgauges.industrial_white_led.help}",
  "block.rsgauges.industrial_rotary_lever": "Industrial Rotary Lever",
  "block.rsgauges.industrial_rotary_lever.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.hoppermountable.help}",
  "block.rsgauges.industrial_rotary_machine_switch": "Rotary Machine Switch",
  "block.rsgauges.industrial_rotary_machine_switch.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_shock_sensitive_contact_mat": "Industrial Shock Sensitive Contact Mat",
  "block.rsgauges.industrial_shock_sensitive_contact_mat.help": "An industrial contact mat emitting\n a redstone pulse when exposed to\n mechanical shock from above (e.g.\n something falls on it).\n Outputs are to the front and\n bottom. Power is always 15.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_shock_sensitive_trapdoor": "Industrial Shock Activated Trapdoor",
  "block.rsgauges.industrial_shock_sensitive_trapdoor.help": "An industrial floor trap door\n that swings open and emits a\n redstone signal when someone or\n something falls on it. Output is\n to the block it is mounted on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_small_digital_gauge": "Small Digital Display Redstone Gauge",
  "block.rsgauges.industrial_small_digital_gauge.help": "${block.rsgauges.industrial_analog_angular_gauge.help}",
  "block.rsgauges.industrial_small_lever": "Industrial Contact Lever",
  "block.rsgauges.industrial_small_lever.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_switchlink_cased_pulse_receiver": "Industrial Cased Pulse Switch Link Receiver",
  "block.rsgauges.industrial_switchlink_cased_pulse_receiver.help": "A full block industrial pulse\n switching device that is optimized\n to be used as a Switch Link\n target. Like a normal pulse switch\n it activates for a short time when\n manually clicked or triggered by a\n switch link. The relay inside is\n muffled and therefore very silent.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.pulsetime.help}",
  "block.rsgauges.industrial_switchlink_cased_receiver": "Industrial Cased Switch Link Receiver",
  "block.rsgauges.industrial_switchlink_cased_receiver.help": "A full block cased industrial\n bistable switching device that is\n optimized to be used as a Switch\n Link target. The relay inside is\n muffled and therefore very silent.\n Can also be manually activated\n like a lever.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_switchlink_pulse_receiver": "Industrial Pulse Switch Link Receiver",
  "block.rsgauges.industrial_switchlink_pulse_receiver.help": "A small industrial pulse switching\n device that is optimized to be\n used as a Switch Link target. Like\n a normal pulse switch it activates\n for a short time when manually\n clicked or triggered by a switch\n link. The relay inside is muffled\n and therefore very silent.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.pulsetime.help}",
  "block.rsgauges.industrial_switchlink_pulse_relay": "Industrial Switch Link Pulse Transmitter",
  "block.rsgauges.industrial_switchlink_pulse_relay.help": "A small industrial pulse switching\n device optimized to be used as a\n Switch Link relay with redstone\n input. Cannot emit signals, but\n allows Link Pearls inside to trigger\n when the redstone power of the\n block it is mounted on changes.\n Activates for a short time when\n the input changes from 0 to any\n higher value. By double-left\n clicking empty handed you can\n change the input polarity and\n sensitivity (default weak).\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_switchlink_receiver": "Industrial Switch Link Receiver",
  "block.rsgauges.industrial_switchlink_receiver.help": "A small industrial bistable\n switching device that is optimized\n to be used as a Switch Link target\n. The relay inside is muffled and\n therefore very silent. Can also\n be manually activated like a lever.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_switchlink_receiver_analog": "Industrial Analog Switch Link Receiver",
  "block.rsgauges.industrial_switchlink_receiver_analog.help": "Small device to output analog Redstone signals from received Switch Link signals. Can be used in conjunction with an analog link transmitter, comparator switch, or dimmer.\n.${rsgauges.switch.feature.linktarget.help}",
  "block.rsgauges.industrial_switchlink_relay": "Industrial Switch Link Transmitter",
  "block.rsgauges.industrial_switchlink_relay.help": "A small industrial switching\n device that is optimized to be\n used as a Switch Link relay with\n redstone input. The relay cannot\n emit redstone signals, instead\n it allows Link Pearls inside to\n trigger when the redstone power\n of the block it is mounted on\n changes. By double-left clicking\n empty handed you can change the\n input polarity (inverted means\n active-low) and strength\n sensitivity (default weak, strong\n means that strong power is needed\n to trigger the links). Muffled,\n therefore very silent. Can also\n be manually activated like a\n lever for testing.\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_switchlink_relay_analog": "Industrial Analog Switch Link Transmitter",
  "block.rsgauges.industrial_switchlink_relay_analog.help": "A small device that transmits detected redstone signals wirelessly as analog information to switch link targets. It cannot emit redstone signals itself.\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.industrial_tube_gauge": "Glass Tube Redstone Gauge",
  "block.rsgauges.industrial_tube_gauge.help": "${block.rsgauges.industrial_analog_angular_gauge.help}",
  "block.rsgauges.industrial_vertical_bar_gauge": "Analog Bar Redstone Gauge",
  "block.rsgauges.industrial_vertical_bar_gauge.help": "${block.rsgauges.industrial_analog_angular_gauge.help}",
  "block.rsgauges.industrial_white_blinking_led": "White Blinking LED Redstone Indicator",
  "block.rsgauges.industrial_white_blinking_led.help": "${block.rsgauges.industrial_white_led.help}\n Blinks with a frequency of about 0.5Hz.",
  "block.rsgauges.industrial_white_led": "White LED Redstone Indicator",
  "block.rsgauges.industrial_white_led.help": "A small device that can be\n attached to a block to indicate\n if that block is powered. If the\n block can provide power itself,\n it uses the output of the block,\n otherwise it looks up the power\n that the block receives from\n adjacent blocks. Left click with\n dye to change the LED color.",
  "block.rsgauges.industrial_yellow_blinking_led": "Yellow Blinking LED Redstone Indicator",
  "block.rsgauges.industrial_yellow_blinking_led.help": "${block.rsgauges.industrial_white_led.help}\n Blinks with a frequency of about 0.5Hz.",
  "block.rsgauges.industrial_yellow_led": "Yellow LED Redstone Indicator",
  "block.rsgauges.industrial_yellow_led.help": "${block.rsgauges.industrial_white_led.help}",
  "block.rsgauges.light_switch": "Small Light Switch",
  "block.rsgauges.light_switch.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.oldfancy_bistableswitch1": "Old Fancy Lever",
  "block.rsgauges.oldfancy_bistableswitch1.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.oldfancy_bistableswitch2": "Old Fancy Rotary Lever",
  "block.rsgauges.oldfancy_bistableswitch2.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.oldfancy_button": "Old Fancy Button",
  "block.rsgauges.oldfancy_button.help": "${rsgauges.switch.feature.typepulse.help}${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.projectilesense.help}",
  "block.rsgauges.oldfancy_small_button": "Small Old Fancy Button",
  "block.rsgauges.oldfancy_small_button.help": "${rsgauges.switch.feature.typepulse.help}${rsgauges.switch.feature.outputconfig.help} ${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.projectilesense.help}",
  "block.rsgauges.oldfancy_spring_reset_chain": "Old Fancy Chain Button",
  "block.rsgauges.oldfancy_spring_reset_chain.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.qube": "The qube",
  "block.rsgauges.qube.help": "It's a developer block that is not\n supposed to be craftable or\n used in the game.",
  "block.rsgauges.red_power_plant": "Red power plant",
  "block.rsgauges.red_power_plant.help": "Artificial red flower that\n looks very similar to a poppy,\n emitting a redstone signal to the\n front and bottom when something\n touches it (like a contact plate).\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_angular_lever": "Rustic Rotary Lever",
  "block.rsgauges.rustic_angular_lever.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.hoppermountable.help}",
  "block.rsgauges.rustic_button": "Rustic Button",
  "block.rsgauges.rustic_button.help": "${rsgauges.switch.feature.typepulse.help}${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}\n${rsgauges.switch.feature.projectilesense.help}",
  "block.rsgauges.rustic_circular_gauge": "Rustic Circular Wall Meter Redstone gauge",
  "block.rsgauges.rustic_circular_gauge.help": "${block.rsgauges.industrial_analog_angular_gauge.help}",
  "block.rsgauges.rustic_contact_plate": "Rustic Pressure Plate",
  "block.rsgauges.rustic_contact_plate.help": "A metal plate that emits a redstone\n signal when exposed to mechanical\n pressure from above (e.g. someone\n standing on it), and a short time\n after the pressure was released.\n Outputs are to the front and\n bottom.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_door_contact_plate": "Rustic Door Pressure Plate",
  "block.rsgauges.rustic_door_contact_plate.help": "A metal plate that emits a\n redstone signal when exposed to\n mechanical pressure from above\n (e.g. someone standing on it),\n and a short time after the pressure\n was released. Outputs are to the\n front and bottom.\n${rsgauges.switch.feature.contactmat.touch.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_fallthrough_detector": "Rustic Fall-Through Detector Trapdoor",
  "block.rsgauges.rustic_fallthrough_detector.help": "A metal trap door that swings\n open emits a redstone signal when\n something touches it. Output is\n to the block it is mounted on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_high_sensitive_trapdoor": "Rustic Sensitive Shock Activated Trapdoor",
  "block.rsgauges.rustic_high_sensitive_trapdoor.help": "Metal floor trap door that swings\n open and emits a redstone signal\n when someone or something falls\n on it, or when someone walks on\n it without sneaking. Output is to\n the block it is mounted on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_lever": "Rustic Lever",
  "block.rsgauges.rustic_lever.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_nail_button": "Rustic Nail Button",
  "block.rsgauges.rustic_nail_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_nail_lever": "Rustic Nail Lever",
  "block.rsgauges.rustic_nail_lever.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_semaphore": "Rustic Redstone Semaphore",
  "block.rsgauges.rustic_semaphore.help": "A small metal case with a\n semaphore flag, which raises when\n the block to that the indicator\n is attached to is powered. If the\n block can provide power itself,\n it uses the output of the block,\n otherwise it looks up the power\n that the block receives from\n adjacent blocks. Left click with\n dye to tint the flag.",
  "block.rsgauges.rustic_shock_sensitive_plate": "Rustic Shock Sensitive Pressure Plate",
  "block.rsgauges.rustic_shock_sensitive_plate.help": "A metal plate emitting a redstone\n pulse when exposed to mechanical\n shock from above (e.g. something\n falls on it). Outputs are to the\n front and bottom. Power is always 15.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_shock_sensitive_trapdoor": "Rustic Shock Activated Trapdoor",
  "block.rsgauges.rustic_shock_sensitive_trapdoor.help": "A metal floor trap door that\n swings open and emits a redstone\n signal when someone or something\n falls on it. Output is to the\n block it is mounted on.\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_small_button": "Rustic Small Button",
  "block.rsgauges.rustic_small_button.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_spring_reset_chain": "Rustic Chain Button",
  "block.rsgauges.rustic_spring_reset_chain.help": "${rsgauges.switch.feature.typepulse.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.pulseextend.help}\n${rsgauges.switch.feature.pulsetime.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.rustic_two_hinge_lever": "Rustic Two-Hinge Lever",
  "block.rsgauges.rustic_two_hinge_lever.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.sensitive_glass_block": "Redstone-Sensitive Glass Block (Light Emitting)",
  "block.rsgauges.sensitive_glass_block.help": "Glass block that emits light when\n it is powered by a redstone signal,\n similar to a redstone lamp.",
  "block.rsgauges.stained_sensitiveglass": "Coloured Redstone-Sensitive Glass Block",
  "block.rsgauges.stained_sensitiveglass.help": "Glass block that changes from\n transparent to colored when it is\n powered by a redstone signal. A\n faint dashed framing indicates\n the color in unpowered state.",
  "block.rsgauges.valve_wheel_switch": "Valve Switch",
  "block.rsgauges.valve_wheel_switch.help": "${rsgauges.switch.feature.typebistable.help}\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.linktarget.help}\n${rsgauges.switch.feature.linksource.help}",
  "block.rsgauges.yellow_power_plant": "Yellow power plant",
  "block.rsgauges.yellow_power_plant.help": "Artificial yellow flower that\n looks very similar to dandelion,\n emitting a redstone signal to the\n front and bottom when something\n touches it (like a contact plate).\n${rsgauges.switch.feature.outputconfig.help}\n${rsgauges.switch.feature.contactmat.offdelay.help}\n${rsgauges.switch.feature.linksource.help}",
  "item.rsgauges.switchlink_pearl": "Switch Link Pearl",
  "item.rsgauges.switchlink_pearl.help": "Created by left clicking a switch\n with an Ender pearl. Remote\n activates that (target) switch when\n used (sneak click) or plugged into\n another (source) switch. Change\n link options by clicking the\n target with the Switch Link Pearl\n (cycles through link options). You\n can plug more than one pearl into\n a switch. Pearls will complain\n when they are overstressed or\n cannot find their target, you can\n hear that. If a switch is not\n suitable to be a source or target\n for linking, the pearl will also\n complain. Different switch types\n may differ in their reaction to\n link triggers (simply experiment\n a bit).",
  "rsgauges.gaugeconfig.options.comparator": "Comparator Input",
  "rsgauges.gaugeconfig.options.inverted": "Inverted",
  "rsgauges.gaugeconfig.options.notinverted": "Normal",
  "rsgauges.subtitle.soundindicator1": "Alarm siren",
  "rsgauges.switch.feature.colortinting.help": "Left-click with any dye to color\n tint the switch.",
  "rsgauges.switch.feature.contactmat.offdelay.help": "Left-click with a stack of\n redstone to set the hold-time\n between 0.1s (1) and 6.4s (64).",
  "rsgauges.switch.feature.contactmat.touch.help": "Click on the touch config up/down\n buttons to set output power,\n entity filter, entity count,\n and sensitivity.",
  "rsgauges.switch.feature.hoppermountable.help": "Can be placed on hoppers.",
  "rsgauges.switch.feature.linksource.help": "Click with a Switch Link Pearl to\n use this switch as link source.",
  "rsgauges.switch.feature.linktarget.help": "Click with an Ender pearl to get\n a Switch Link Pearl linked to\n this switch.",
  "rsgauges.switch.feature.outputconfig.help": "Click with a Redstone Torch to\n configure the output (cycles\n through the options that this\n switch supports).",
  "rsgauges.switch.feature.projectilesense.help": "Can be activated with projectiles.",
  "rsgauges.switch.feature.pulseextend.help": "Activate while already active to\n extend the pulse time.",
  "rsgauges.switch.feature.pulsetime.help": "Left-click with a stack of\n redstone to set a fixed pulse time\n between 0.1s (1) and 6.4s (64).",
  "rsgauges.switch.feature.typebistable.help": "A switch that is manually flipped\n on or off like a lever.",
  "rsgauges.switch.feature.typepulse.help": "A switch that outputs a redstone\n signal for a short time, like a\n button.",
  "rsgauges.switchconfig.blocksensor": "%1$s%2$s%3$s%4$s%5$s",
  "rsgauges.switchconfig.blocksensor.debounce": "debounce: %1$s",
  "rsgauges.switchconfig.blocksensor.filter": "filter: %1$s",
  "rsgauges.switchconfig.blocksensor.filter.air": "air",
  "rsgauges.switchconfig.blocksensor.filter.any": "any block",
  "rsgauges.switchconfig.blocksensor.filter.crop": "crop",
  "rsgauges.switchconfig.blocksensor.filter.crop_mature": "mature crop",
  "rsgauges.switchconfig.blocksensor.filter.fertile": "fertile soil",
  "rsgauges.switchconfig.blocksensor.filter.liquid": "liquid",
  "rsgauges.switchconfig.blocksensor.filter.material_clay": "clay/ceramics",
  "rsgauges.switchconfig.blocksensor.filter.material_glass": "glass",
  "rsgauges.switchconfig.blocksensor.filter.material_stone": "stone",
  "rsgauges.switchconfig.blocksensor.filter.material_water": "water/ice",
  "rsgauges.switchconfig.blocksensor.filter.material_wood": "wooden",
  "rsgauges.switchconfig.blocksensor.filter.ore": "ore",
  "rsgauges.switchconfig.blocksensor.filter.planks": "planks",
  "rsgauges.switchconfig.blocksensor.filter.plant": "plant",
  "rsgauges.switchconfig.blocksensor.filter.sapling": "sapling",
  "rsgauges.switchconfig.blocksensor.filter.slab": "slab",
  "rsgauges.switchconfig.blocksensor.filter.soil": "soil",
  "rsgauges.switchconfig.blocksensor.filter.solid": "solid",
  "rsgauges.switchconfig.blocksensor.filter.woodlog": "wood log",
  "rsgauges.switchconfig.blocksensor.output_power": "power: %1$s",
  "rsgauges.switchconfig.blocksensor.range": "range: %1$s",
  "rsgauges.switchconfig.blocksensor.threshold": "threshold: %1$s",
  "rsgauges.switchconfig.comparator_switch": "%1$s%2$s%3$s%4$s",
  "rsgauges.switchconfig.comparator_switch.mode0": "comparator mode",
  "rsgauges.switchconfig.comparator_switch.mode1": "used inventory slots",
  "rsgauges.switchconfig.comparator_switch.mode2": "free inventory slots",
  "rsgauges.switchconfig.comparator_switch.mode3": "redstone signal strength",
  "rsgauges.switchconfig.comparator_switch.output_power": "power: %1$s",
  "rsgauges.switchconfig.comparator_switch.threshold_off": "off-level: %1$s",
  "rsgauges.switchconfig.comparator_switch.threshold_on": "on-level: %1$s",
  "rsgauges.switchconfig.daytimerclock": "%1$s%2$s%3$s%4$s",
  "rsgauges.switchconfig.daytimerclock.daytime_off": "off: %1$s",
  "rsgauges.switchconfig.daytimerclock.daytime_on": "on: %1$s",
  "rsgauges.switchconfig.daytimerclock.output_power": "power: %1$s",
  "rsgauges.switchconfig.daytimerclock.random": "random: %1$s",
  "rsgauges.switchconfig.detector.entity_filter": "entity type: %1$s",
  "rsgauges.switchconfig.detector.entity_filter.animals": "animals",
  "rsgauges.switchconfig.detector.entity_filter.creatures": "creatures",
  "rsgauges.switchconfig.detector.entity_filter.everything": "everything",
  "rsgauges.switchconfig.detector.entity_filter.mobs": "mobs",
  "rsgauges.switchconfig.detector.entity_filter.objects": "objects",
  "rsgauges.switchconfig.detector.entity_filter.players": "players",
  "rsgauges.switchconfig.detector.entity_filter.villagers": "villagers",
  "rsgauges.switchconfig.detector.entity_threshold": "entity threshold: %1$s",
  "rsgauges.switchconfig.detector.output_power": "power: %1$s",
  "rsgauges.switchconfig.detector.sensor_range": "sensor range: %1$s",
  "rsgauges.switchconfig.dimmerswitch.output_power": "power: %1$s",
  "rsgauges.switchconfig.intervaltimer": "%1$s%2$s%3$s%4$s%5$s",
  "rsgauges.switchconfig.intervaltimer.output_power": "power: %1$s",
  "rsgauges.switchconfig.intervaltimer.ramp": "ramp: %1$s",
  "rsgauges.switchconfig.intervaltimer.standby": "STANDBY",
  "rsgauges.switchconfig.intervaltimer.t_off": "off: %1$ss",
  "rsgauges.switchconfig.intervaltimer.t_on": "on: %1$ss",
  "rsgauges.switchconfig.lightsensor": "%1$s%2$s%3$s%4$s",
  "rsgauges.switchconfig.lightsensor.debounce": "debounce: %1$s %2$s",
  "rsgauges.switchconfig.lightsensor.lightunit": "lux",
  "rsgauges.switchconfig.lightsensor.output_power": "power: %1$s",
  "rsgauges.switchconfig.lightsensor.threshold_off": "off: %1$s%2$s",
  "rsgauges.switchconfig.lightsensor.threshold_on": "on: %1$s%2$s",
  "rsgauges.switchconfig.options": "%1$s",
  "rsgauges.switchconfig.options.no_output": "no output",
  "rsgauges.switchconfig.options.output_power": "power: %1$s",
  "rsgauges.switchconfig.options.pulsetime": "pulse: %1$ss (%2$s ticks)",
  "rsgauges.switchconfig.options.strong": "strong",
  "rsgauges.switchconfig.options.stronginverted": "strong inverted",
  "rsgauges.switchconfig.options.weak": "weak",
  "rsgauges.switchconfig.options.weakinverted": "weak inverted",
  "rsgauges.switchconfig.rainsensor.output_power": "power: %1$s",
  "rsgauges.switchconfig.thundersensor.output_power": "power: %1$s",
  "rsgauges.switchconfig.tinting": "tinted %1$s",
  "rsgauges.switchconfig.tinting.black": "black",
  "rsgauges.switchconfig.tinting.blue": "blue",
  "rsgauges.switchconfig.tinting.brown": "brown",
  "rsgauges.switchconfig.tinting.cyan": "cyan",
  "rsgauges.switchconfig.tinting.gray": "gray",
  "rsgauges.switchconfig.tinting.green": "green",
  "rsgauges.switchconfig.tinting.lightblue": "light blue",
  "rsgauges.switchconfig.tinting.lime": "lime",
  "rsgauges.switchconfig.tinting.magenta": "magenta",
  "rsgauges.switchconfig.tinting.orange": "orange",
  "rsgauges.switchconfig.tinting.pink": "pink",
  "rsgauges.switchconfig.tinting.purple": "purple",
  "rsgauges.switchconfig.tinting.red": "red",
  "rsgauges.switchconfig.tinting.silver": "light gray",
  "rsgauges.switchconfig.tinting.white": "white",
  "rsgauges.switchconfig.tinting.yellow": "yellow",
  "rsgauges.switchconfig.touchcontactmat.entity_filter": "entity type: %1$s",
  "rsgauges.switchconfig.touchcontactmat.entity_filter.animals": "animals",
  "rsgauges.switchconfig.touchcontactmat.entity_filter.creatures": "creatures",
  "rsgauges.switchconfig.touchcontactmat.entity_filter.everything": "everything",
  "rsgauges.switchconfig.touchcontactmat.entity_filter.mobs": "mobs",
  "rsgauges.switchconfig.touchcontactmat.entity_filter.objects": "objects",
  "rsgauges.switchconfig.touchcontactmat.entity_filter.players": "players",
  "rsgauges.switchconfig.touchcontactmat.entity_filter.villagers": "villagers",
  "rsgauges.switchconfig.touchcontactmat.entity_threshold": "entity threshold: %1$s",
  "rsgauges.switchconfig.touchcontactmat.output_power": "power: %1$s",
  "rsgauges.switchconfig.touchcontactmat.sensitivity": "sensitivity: %1$s",
  "rsgauges.switchconfig.touchcontactmat.sensitivity.high": "high",
  "rsgauges.switchconfig.touchcontactmat.sensitivity.normal": "normal",
  "rsgauges.switchlinking.relayconfig.confval0": "Trigger as source output.",
  "rsgauges.switchlinking.relayconfig.confval1": "Trigger on source activation.",
  "rsgauges.switchlinking.relayconfig.confval2": "Trigger on source deactivation.",
  "rsgauges.switchlinking.relayconfig.confval3": "Trigger on source change.",
  "rsgauges.switchlinking.relayconfig.confval4": "Trigger as source inverse output.",
  "rsgauges.switchlinking.source_assign.error_alreadylinked": "Already linked to the target of that pearl",
  "rsgauges.switchlinking.source_assign.error_failed": "Link pearl don't like that switch",
  "rsgauges.switchlinking.source_assign.error_nosource": "This switch cannot link to target switches",
  "rsgauges.switchlinking.source_assign.error_toofaraway": "Target is too far away for this switch",
  "rsgauges.switchlinking.source_assign.ok": "Link pearl plugged",
  "rsgauges.switchlinking.switchlink_pearl.tooltip.linkedblock": "Linked to %1$s.",
  "rsgauges.switchlinking.switchlink_pearl.tooltip.linkeddistance": "Target is %1$s blocks away.",
  "rsgauges.switchlinking.switchlink_pearl.tooltip.toofaraway": "(too far away)",
  "rsgauges.switchlinking.switchlink_pearl.use.targetgone": "Target switch is broken or relocated",
  "rsgauges.switchlinking.switchlink_pearl.use.toofaraway": "Target switch is too far away from you",
  "rsgauges.switchlinking.target_assign.error_notarget": "This switch cannot be a link target",
  "rsgauges.switchlinking.target_assign.ok": "Target switch memorized"
}