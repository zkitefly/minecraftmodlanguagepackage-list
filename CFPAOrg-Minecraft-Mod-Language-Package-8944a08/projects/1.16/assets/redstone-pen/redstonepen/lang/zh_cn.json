{
  "language": "Chinese",
  "itemGroup.tabredstonepen": "红石笔",
  "redstonepen.tooltip.hint.extended": "§6[按下§9shift§r获取更多信息§6]§r",
  "redstonepen.tooltip.hint.help": "§6[按下§9ctrl-shift§r获取帮助§6]§r",
  "block.redstonepen.bistable_relay": "双稳态红石中继器",
  "block.redstonepen.bistable_relay.help": "将来自背面和侧面的红石信号以强度为15的红石信号输出到前面。当检测到输入的红石信号发生变化时，它会切换自身的开启状态（亦即，是由信号从无到有，或从有到无控制的）。",
  "block.redstonepen.bridge_relay": "桥接红石中继器",
  "block.redstonepen.bridge_relay.help": "将来自后面的红石信号以强度为15的红石信号输出到前面。而从左到右的红石信号可以正常通过。",
  "block.redstonepen.control_box": "红石逻辑控制装置",
  "block.redstonepen.control_box.error.expected_assignment": "需要赋值",
  "block.redstonepen.control_box.error.invalid_character": "不合规的字符",
  "block.redstonepen.control_box.error.invalid_number_of_arguments": "不合规的数字或函数参数",
  "block.redstonepen.control_box.error.missing_closing_function_parenthesis": "需要函数右括号‘)’",
  "block.redstonepen.control_box.error.missing_closing_parenthesis": "需要右括号‘)’",
  "block.redstonepen.control_box.error.missing_function_arguments": "需要函数参数（包括括号）",
  "block.redstonepen.control_box.error.symbol_readonly": "符号和变量是只读的",
  "block.redstonepen.control_box.error.unexpected_character": "意外的字符",
  "block.redstonepen.control_box.error.unknown_function": "未知的函数",
  "block.redstonepen.control_box.help": "简化的类PLC控制器。",
  "block.redstonepen.control_box.help.1": "§n基础：§r§7红石逻辑控制装置（RLC）提供了全方向的数字（开/关）和模拟（信号强度、比较器输出）红石输入/输出。端口是：Red（红），§7Blue（蓝），Yellow（黄），Green（绿），Up（上）和Down（下）的首字母。\n§7你可以用一系列的数学表达式进行编程。所有代码行会在同一游戏刻被运算（读取输入->运算->写入输出）。不区分大小写（“R”和“r”相同）。你也可以自己设置变量，它们的值会在RLC停止运行前一直保留。语法错误会被标记（将鼠标悬浮在上面查看）并阻止程序运行。\n\n§7点击运行/停止按钮来开始或结束程序。将鼠标悬浮在RLC图标上查看内部变量的值（只在运行时可看）。端口列表显示了目前的信号值，以及端口是输入、输出还是未使用。复制/粘贴剪贴板按钮，不需要多说吧 ;)",
  "block.redstonepen.control_box.help.10": "§n进阶：§r§7控制装置正常每4tick运算一次，当输入接口状态开变成关或关变成开时，运行循环会在下一个可能的tick重新安排运行。赋值“TICKRATE”变量来改变基准tick速率，范围1到20tick。比较器输入不会触发运行安排。",
  "block.redstonepen.control_box.help.2": "§n表达式§r§7是形如“RESULT=TERM”的赋值语句，如“R=G&B”。每行代码行都必须是这种形式。使用“#”标记后方内容为注释。TERM可以包含括号“(...)”、端口、变量、运算符和函数。\n\n§7如果赋值给端口变量（R、B、Y、G、U、D），它会自动设置为输出，且无视输入信号的改变。如果你在表达式中调用了端口变量（此时还不是输出），它会自动设置为输入。\n§7相邻方块的比较器输出可以加“.CO”后缀来读取。例如“Y = MAX( B.CO, R, g.co, MyVar )”。比较器输入无法作为RLC输出，即使你将其赋值。",
  "block.redstonepen.control_box.help.3": "§n运算§r§7是指RLC中的整型运算，这意味着“A * 1.5”这样的语句无法被接受，且除法会向零取整。支持的运算符有：\n\n§7  “+”、“-”、“*”、“/”、“%”（最后的符号是模数除法）。\n\n§7变量赋值可高达正负32位的整型值（足够满足你的需求）。端口值则被限制在了红石信号强度的有效范围0到15内。32位整型除以零会得到0和一个通往地牢维度的奇点。",
  "block.redstonepen.control_box.help.4": "§n关系§r§7运算符提供了数字比较：\n§7\n§7  ==（相等）、“!=”（不相等），\n§7  “>=”（大于等于）、“<=”（小于等于），\n§7  “>”（大于），“<”（小于）。\n§7\n§7当比较结果为“假”时返回0，为“真”时返回15。这些值是数字，所以你可以直接使用它们进行运算。例如“G=(R>11)/3”的结果是5或0。不过使用IF函数会更好：“G = IF( R>11, 5, 0 )”。",
  "block.redstonepen.control_box.help.5": "§n逻辑§r§7运算符可以与“红石布朗”值进行运算，红石布朗值为整数。大于0的操作对象被视为“真”。返回0的运算符视为“假”，返回15视为“真”。支持的运算符有：\n§7\n§7 与：“AND”、“&&”、“&”\n§7 或：“OR”、“||”、“|”\n§7 或非：“XOR”、“^”\n§7 非：“NOT”、“!”\n§7\n§7经验之谈：运算符像红石灯一样检测输入并像拉杆一样进行输出。敬告程序员：这里没有位运算符。",
  "block.redstonepen.control_box.help.6": "§n边缘检测§r§7意味着自输入由关[0]变为开时就对其进行追踪，反之亦然。\n§7使用“.RE”前缀设置上升沿触发器，在输入由关变为开后的1tick内变为15。\n§7使用“.FE”设置下降沿触发器，在输入由开变为关后的1tick内变为15。\n§7例如：\n§7\n§7 C = C+IF(R.RE OR G.FE OR Y.CO.RE, 1, 0) #对C求和\n§7 C = CNT1(G.RE, B.RE, 10) #使用加减计数器1\n§7\n§7注：尽管RLC也许不会每tick都执行，边缘依旧会在输入端口上被检测到（“阻断”）。PLC中的对应词叫RTRIG（上升沿）和FTRIG（下降沿）。",
  "block.redstonepen.control_box.help.7": "§n计时器§r§7在PLC中是基于信号的。RLC中有三个主要的计时器：TON、TOF和TP：\n§7TON为开启延迟。输入信号必须在开状态稳定一段时间，直到计时器输出上升为开。任何关信号都会立即重置计时器。TOF正好相反（关闭延迟）。TP会在检测到输入信号的上升沿后一段时间产生一次脉冲。产生脉冲之间的任何信号改变都会被忽视。RLC中的每种计时器各有4个（简化的）实例：\n§7\n§7 A = TON3( INPUT_TERM, ON_DELAY_TICKS )\n§7 A = TOF2( INPUT_TERM, OFF_DELAY_TICKS )\n§7 A = TP4( INPUT_TERM, PULSE_TIME_TICKS )\n§7 R = TON1( Y.CO<3, 30*20 ) #30秒后漏斗低物品量报警\n§7 R = TP1( Y.RE, 20 ) #延长侦测器脉冲1秒",
  "block.redstonepen.control_box.help.8": "§n计数器§r§7可帮助追踪事件的发生。RLC有四个稳定的加减计数器CNT1..4，可额外输入参数：\n§7\n§7N = CNTx(Iup)   #若Iup大于0则做加法\n§7N = CNTx(Iup, Idown)   #IDown小于0时归零\n§7N = CNTx(Iup, Idown, Max)   #从0到Max计数\n§7N = CNTx(Iup, Idown, Min, Max)   #从Min到Max计数\n§7N = CNTx(Iup, Idown, Min, Max, Reset)    #重置为Min\n§7\n§7N赋有新的计数器值。注：使用信号沿（如G.RE）作为输入来对事件进行计数。计时器无法保证有tick级的精确率（使用计时器定时）。",
  "block.redstonepen.control_box.help.9": "§n函数参考§r\n§7IF(X,A,B)   #如果X>0输出A反之输出B\n§7INV(X)   #红石信号反向：15-X，结果在0到15之间。\n§7MAX(A,B,...), MIN(...), MEAN(...)   #最小值、最大值、平均值\n§7LIM(X), LIM(X,B), LIM(X,A,B)   #限制值在0到15、0到B、A到B\n§7TIME(), CLOCK()    #一天的时间、游戏时间\n§7RND()   #随机生成0到15的值",
  "block.redstonepen.control_box.tooltips.copyall": "复制代码到剪贴板",
  "block.redstonepen.control_box.tooltips.pasteall": "从剪贴板粘贴代码",
  "block.redstonepen.control_box.tooltips.runstop": "运行/停止",
  "block.redstonepen.inverted_relay": "反转红石中继器",
  "block.redstonepen.inverted_relay.help": "将来自背面和侧面的红石信号以强度15的红石信号输出到前面。输出信号被反转（如果有输入信号，则输出信号为0；如果没有输入信号，则输出信号为15）。关闭时的延迟是一个红石刻，开启时无延迟。\n还能接受来自非直连轨迹的红石信号输出（需要让其连接到传播红石信号的方块）。",
  "block.redstonepen.pulse_relay": "脉冲红石中继器",
  "block.redstonepen.pulse_relay.help": "当检测到输入的红石信号发生变化时，会在输出端发出一次的短脉冲（亦即，是由信号从无到有，或从有到无控制的），一次脉冲时长一个红石刻。",
  "block.redstonepen.relay": "红石中继器",
  "block.redstonepen.relay.help": "将来自背面和侧面的红石信号以强度为15的红石信号输出到前面。打开或关闭它的延迟为一个红石刻。\n还能接受来自非直连轨迹的红石信号输出（需要让其连接到传播红石信号的方块）。",
  "block.redstonepen.track": "红石轨迹",
  "item.redstonepen.pen": "红石笔",
  "item.redstonepen.pen.help": "一只可以重复填充的笔，用于在各个方向上绘制或擦除任意方向上的细小红石轨迹。这些红石轨迹通常§l不会§r充能它们下面的方块（单击轨迹中心，可以精细地放置/移除红石连接点）。潜行即可查看所视方块目前的红石信号强度。将笔与红石在合成网格中进行合成，即可修复笔。\n若在单个方块的一个面上绘制了过多的轨迹，且该方块面未与外部进行连接，那么这些轨迹将会相互串扰而无法正常工作，只需重新布线即可。",
  "item.redstonepen.pen.tooltip.numstored": "储存有%1$s份红石",
  "item.redstonepen.pen.tooltip.rsfrominventory": "会使用你背包中的红石",
  "item.redstonepen.quill": "红石羽毛笔",
  "item.redstonepen.quill.help": "用于在各个方向上绘制或擦除细小的红石轨迹（消耗背包内的红石）。这些红石轨迹通常§l不会§r充能它们下面的方块(单击轨迹中心以放置/移除红石连接点)。潜行即可查看所视方块目前的红石信号强度。\n一个方块内未连接端点的太多轨迹会导致它们串扰并且无法正常工作，只需重新布线即可。",
  "advancement.redstonepen.craft_redstonepen": "神笔马良",
  "advancement.redstonepen.craft_redstonepen.desc": "合成一个红石笔",
  "redstonepen.overlay.comparator_compare": " 比较",
  "redstonepen.overlay.comparator_subtract": " 减去",
  "redstonepen.overlay.direct_power": "[%1$s]",
  "redstonepen.overlay.direct_power_at": "[%1$s] @ %2$s",
  "redstonepen.overlay.indirect_power": "(%1$s) @ %2$s",
  "redstonepen.overlay.repeater_delay": " %1$st",
  "redstonepen.overlay.track_power": "<%1$s>",
  "redstonepen.overlay.wire_power": "<%1$s>"
}