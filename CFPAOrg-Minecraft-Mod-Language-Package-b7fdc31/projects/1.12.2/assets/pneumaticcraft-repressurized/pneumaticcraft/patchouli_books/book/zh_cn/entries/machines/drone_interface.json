{
  "name": "无人机接口",
  "icon": "pneumaticcraft:drone_interface",
  "category": "machines",
  "flag": "|mod:computercraft,mod:opencomputers",
  "advancement": "pneumaticcraft:printed_circuit_board",
  "pages": [
    {
      "type": "text",
      "text": "无人机接口是一个与$(l:tools/drone)无人机/$交互的 $(thing)ComputerCraft/OpenComputers 外设/$。要做到这一点，对$(item)无人机/$编入含有$(l:programming/computercraft)电脑控制/$拼图的程序。当无人机执行该拼图时，其将会试图连接到给定区域内$(ttcolor)$(t:每个无人机接口只能同时与一个无人机连接)可用/$的$(item)无人机接口/$。"
    },
    {
      "text": "$(#800)abortAction()/$$(p)终止目前执行的操作。",
      "type": "text",
      "title": "abortAction()"
    },
    {
      "title": "addArea()",
      "text": "$(#800)addArea(<x>,<y>,<z>)/$|$(#800)addArea(<x1>,<y1>,<z1>,<x2>,<y2>,<z2>,<区域类型>)/$$(p)向无人机目前存储的区域添加一个区域。当使用后一个重载时，x1,y1,z1 表示的是第一个点（代表手动添加时第一个定位工具），x1,y2,z2 表示第二个点。",
      "type": "text"
    },
    {
      "text": "$(#800)addBlacklistItemFilter(<物品/方块名>, <损害值/元数据>, <使用元数据>, <使用NBT>, <使用矿物词典>, <使用模组匹配>)/$$(p)和addWhitelistItemFilter(...)一样，但加入的是黑名单。",
      "type": "text",
      "title": "addBlacklistItemFilter()"
    },
    {
      "text": "$(#800)addBlacklistLiquidFilter(<流体名>)/$$(p)和addWhitelistLiquidFilter(...)一样，但加入的是黑名单。",
      "type": "text",
      "title": "addBlacklistLiquidFilter()"
    },
    {
      "title": "addBlacklistText()",
      "type": "text",
      "text": "$(#800)addBlacklistText(<文本>)/$$(p)向黑名单加入一个文本。例如：指定攻击实体操作的过滤器。"
    },
    {
      "type": "text",
      "text": "$(#800)addWhitelistItemFilter(<物品/方块名>, <损害值/元数据>, <使用元数据>, <使用NBT>, <使用矿物词典>, <useModSimilarity>)/$$(p)作为连接在右侧的$(l:programming/item_filter)物品过滤器/$。物品/方块名使用 Minecraft 格式，如：\"minecraft:stone\"，或\"pneumaticcraft:pressureTube\"。‘使用xxx’参数确定哪些过滤器会被使用的 bool 参数（和配置界面里的复选框功能一样）。",
      "title": "addWhitelistItemFilter()"
    },
    {
      "title": "addWhitelistLiquidFilter()",
      "text": "$(#800)addWhitelistLiquidFilter(<流体名>)/$$(p)作为连接在右侧的$l(:programming/liquid_filter)流体过滤器/$。流体名可以是其‘注册名’，也可以是本地化的名称。",
      "type": "text"
    },
    {
      "text": "$(#800)addWhitelistText(<文本>)/$$(p)向白名单文本加入一个文本。例如：指定攻击实体操作的过滤器。",
      "type": "text",
      "title": "addWhitelistText()"
    },
    {
      "title": "clearArea()",
      "type": "text",
      "text": "$(#800)clearArea()/$$(p)清空当前存储的区域。"
    },
    {
      "title": "clearBlacklistItemFilter()",
      "type": "text",
      "text": "$(#800)clearBlacklistItemFilter()/$$(p)清空黑名单内存储的物品过滤器。"
    },
    {
      "title": "clearBlacklistLiquidFilter()",
      "text": "$(#800)clearBlacklistLiquidFilter()/$$(p)清空黑名单内存储的流体过滤器。",
      "type": "text"
    },
    {
      "text": "$(#800)clearBlacklistText()/$$(p)清空黑名单内存储的的文本。",
      "type": "text",
      "title": "clearBlacklistText()"
    },
    {
      "title": "clearWhitelistItemFilter()",
      "text": "$(#800)clearWhitelistItemFilter()/$$(p)清空白名单内存储的物品过滤器。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)clearWhitelistLiquidFilter()/$$(p)清空白名单内存储的流体过滤器。",
      "title": "clearWhitelistLiquidFilter()"
    },
    {
      "title": "clearWhitelistText()",
      "text": "$(#800)clearWhitelistText()/$$(p)清空白名单内存储的文本。",
      "type": "text"
    },
    {
      "title": "evaluateCondition()",
      "text": "$(#800)evaluateCondition()/$$(p)返回 true/false。仅用于条件。将会取决于是否满足条件返回 true/false。无人机条件可以在调用‘setAction()’后即被检查。注意：如果你要检查的是非无人机条件，需要等到‘isActionDone()’为 true。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)exitPiece()/$$(p)终止执行流所在的电脑控制拼图，并使执行流进入下一拼图。",
      "title": "exitPiece()"
    },
    {
      "text": "$(#800)forgetTarget()/$$(p)当无人机（在攻击实体拼图中）目标为一个实体，调用该方法将停止攻击该实体。",
      "type": "text",
      "title": "forgetTarget()"
    },
    {
      "text": "$(#800)getAction()/$$(p)返回代表由‘setAction()’所设置的上一个操作的字符串。如果未设置操作，返回 nil。可以用于确保只在该方法不返回 nil 时才调用‘isActionDone()’。",
      "type": "text",
      "title": "getAction()"
    },
    {
      "title": "getAllActions()",
      "type": "text",
      "text": "$(#800)getAllActions()/$$(p)返回包含所有可以被选择的操作（如 dig（挖掘方块） 或者 place（放置方块））的字符串的列表。"
    },
    {
      "title": "getAreaTypes()",
      "text": "$(#800)getAreaTypes()/$$(p)返回所有可行的区域类型（如 filled（填充），frame（框架），sphere（球）等）。",
      "type": "text"
    },
    {
      "title": "getDronePosition()",
      "text": "$(#800)getDronePosition()/$$(p)返回包含有无人机的 x, y, z 坐标的 double 类型值的列表。",
      "type": "text"
    },
    {
      "text": "$(#800)getDronePressure()/$$(p)返回所连接的无人机的当前压力。",
      "type": "text",
      "title": "getDronePressure()"
    },
    {
      "title": "getUpgrades()",
      "type": "text",
      "text": "$(#800)getUpgrades(<升级>)/$$(p)返回给定升级所安装的数量。<升级>是一个数值索引（从 0 开始），按照其在创造物品栏 / NEI 中的顺序。亦为该升级的元数据值。例如，速度升级的索引为 5。"
    },
    {
      "text": "$(#800)getVariable(<变量名>)/$$(p)返回无人机的对应变量的值（x,y,z）。同样可以获取全局（#）和特定（$）变量的值。",
      "type": "text",
      "title": "getVariable()"
    },
    {
      "type": "text",
      "text": "$(#800)hideArea()/$$(p)停止预览无人机所存储的区域。",
      "title": "hideArea()"
    },
    {
      "title": "isActionDone()",
      "text": "$(#800)isActionDone()/$$(p)如果当前操作已完成（去往位置操作已到达目标位置，从容器提取物品操作无法输入更多物品，挖掘方块操作已经挖掘了所有方块，等等），返回 true。",
      "type": "text"
    },
    {
      "text": "$(#800)isConnectedToDrone()/$$(p)如果一个无人机与该无人机接口连接（即无人机的程序运行到了电脑控制拼图并且连接上了），返回 true。",
      "type": "text",
      "title": "isConnectedToDrone()"
    },
    {
      "title": "removeArea()",
      "text": "$(#800)removeArea(<x>,<y>,<z>)/$|$(#800)removeArea(<x1>,<y1>,<z1>,<x2>,<y2>,<z2>,<区域类型>)/$$(p)从目前存储的区域里删除一个区域（即加入黑名单）。",
      "type": "text"
    },
    {
      "text": "$(#800)setAction(<操作>)/$$(p)设置要执行的操作。<操作>是表示该操作的字符串。该字符串应当属于 getAllActions() 返回的列表。",
      "type": "text",
      "title": "setAction()"
    },
    {
      "title": "setBlockOrder()",
      "text": "$(#800)setBlockOrder(<\"closest\"/\"highToLow\"/\"lowToHigh\">)/$$(p)设置无人机挖掘/放置方块的顺序。",
      "type": "text"
    },
    {
      "text": "$(#800)setCount(<数量>)/$$(p)设置最大输入/输出/丢出物品限制，也是条件检查时被检查的物品数量。",
      "type": "text",
      "title": "setCount()"
    },
    {
      "title": "setCraftingGrid()",
      "type": "text",
      "text": "$(#800)setCraftingGrid(<物品/方块名>, <物品/方块名>, ...(9个))/$$(p)设置在执行合成指令时使用的合成表。需要指定合成配方的所有 9 个物品。对于空物品，使用 nil 代替。命名格式和提供物品过滤器的格式相同。"
    },
    {
      "text": "$(#800)setDropStraight(<true/false>)/$$(p)要执行丢出物品操作时，该方法指定物品会以一个随机的速度丢出（false）还是竖直下落（true）。",
      "type": "text",
      "title": "setDropStraight()"
    },
    {
      "title": "setEmittingRedstone()",
      "text": "$(#800)setEmittingRedstone(<强度>)/$$(p)要执行发出红石信号操作时，该方法指定无人机会被设置为的名字。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setIsAndFunction(<true/false>)/$$(p)只在条件中使用。设置为 true 时，所有被检查的方块需要满足条件（如 >= 10）。",
      "title": "setIsAndFunction()"
    },
    {
      "title": "setMaxActions()",
      "text": "$(#800)setMaxActions(<数量>)/$$(p)设置在指令被认为完成前在一个方块上执行的最多操作限制。该方法仅对放置方块，挖掘方块，右击方块操作适用。确保调用了 setUseMaxActions(true) 以启用这一控制。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setOperator(<\">=\" / \"=\">)/$$(p)只在条件中使用。设置条件检查相等于（\"=\"）或是大于等于（\">=\"）指定数量。这个数量可以用 setCount() 方法设置。",
      "title": "setOperator()"
    },
    {
      "title": "setPlaceFluidBlocks()",
      "type": "text",
      "text": "$(#800)setPlaceFluidBlocks(<true/false>)/$$(p)仅用于输出流体操作。设置为 true 时无人机可以放置下流体方块。"
    },
    {
      "title": "setRenameString()",
      "text": "$(#800)setRenameString(<名称>)/$$(p)设置执行重命名无人机操作时无人机将会被设置为的名称。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setRequiresTool(<true/false>)/$$(p)设置在执行挖掘方块或收获作物操作时无人机是否需要适用工具。",
      "title": "setRequiresTool()"
    },
    {
      "title": "setSide()",
      "text": "$(#800)setSide(<朝向>, <是否可访问>)/$$(p)设置方块某一面可以被访问。用于从容器提取物品/向容器输出物品操作中设置无人机可以从那一面访问容器。也用于放置操作中如何放置方块。",
      "type": "text"
    },
    {
      "title": "setSides()",
      "text": "$(#800)setSides(<下>, <上>, <北>, <南>, <东>, <西>)/$$(p)与上一方法相同，但是一次性设置所有面（6 个 bool）",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setSignText(<行1>, <行2>, ..., <行N>)/$$(p)设置编辑告示牌操作将写入的文本。",
      "title": "setSignText()"
    },
    {
      "title": "setSneaking()",
      "text": "$(#800)setSneaking(<true/false>)/$$(p)仅用于右击方块指令，设置右击时是否潜行右击。",
      "type": "text"
    },
    {
      "type": "text",
      "text": "$(#800)setUseCount(<true/false>)/$$(p)设置无人机是否有最大输入/输出/丢出物品限制。如果设置为 true，需要同时调用 setCount()。",
      "title": "setUseCount()"
    },
    {
      "title": "setUseMaxActions()",
      "type": "text",
      "text": "$(#800)setUseMaxActions(<true/false>)/$$(p)设置无人机是否有在指令被认为完成前对方块执行的最多操作限制。对于放置方块，挖掘方块，右击方块适用。如果设置为 true，需要同时调用 setMaxActions()。"
    },
    {
      "text": "$(#800)setVariable(<变量名>, <true/false>)/$|$(#800)setVariable(<变量名>, <x>)/$|$(#800)setVariable(<变量名>, <x>, <y>, <z>)/$$(p)设置无人机的$(l:programming/coordinate_operator)变量/$。传参为 true 时，坐标会被设为 (1,0,0)。传参为 false 时，坐标会被设为 (0,0,0)。同样可以用于设置全局变量（#）。",
      "type": "text",
      "title": "setVariable()"
    },
    {
      "text": "$(#800)showArea()/$$(p)使用你所习惯的区域渲染器显示目前存储的区域。",
      "type": "text",
      "title": "showArea()"
    },
    {
      "type": "crafting",
      "text": "无人机接口的合成表",
      "recipe": "pneumaticcraft:drone_interface"
    }
  ]
}